{"version":3,"sources":["components/RecipeSearch.js","components/Tag.js","components/TagList.js","components/Recipe.js","components/RecipeBody.js","APIKEY.js","containers/Home.js","components/Ingredient.js","containers/Info.js","containers/App.js","serviceWorker.js","index.js"],"names":["RecipeSearch","changeSearchField","addTag","className","placeholder","onChange","onClick","Tag","name","TagList","tagList","length","map","item","idx","key","Recipe","id","image","title","to","style","textDecoration","color","src","alt","RecipeBody","isLoading","recipes","type","getAPIKey","Home","handleSearchField","e","setState","searchField","target","value","handleTagList","state","includes","handleRecipe","ingredients","join","query","fetch","then","res","json","this","Component","ingredient","Info","match","params","isLoaded","rating","extendedIngredients","summary","Ingredient","original","dangerouslySetInnerHTML","__html","App","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6fb89aad.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst RecipeSearch = ({ changeSearchField, addTag }) => {\r\n  return (\r\n    <div className=\"tc ma3 v-mid\">\r\n      <input\r\n        className=\"input-reset b--black-20 pa2 ma1 w-70 br3\"\r\n        placeholder=\"Add ingredients...\"\r\n        onChange={changeSearchField}\r\n      ></input>\r\n      <button\r\n        onClick={addTag}\r\n        className=\"b--black-20 pa2 ma1 br3 bg-dark-blue white\"\r\n      >\r\n        add\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeSearch;\r\n","import React from \"react\";\r\nimport \"./Tag.css\";\r\n\r\nconst Tag = ({ name }) => {\r\n  return (\r\n    <span className=\"f5 grow br-pill ph3 pv2 ma2 dib white bg-orange\">\r\n      {name}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Tag;\r\n","import React from \"react\";\r\nimport Tag from \"./Tag\";\r\n\r\nconst TagList = ({ tagList }) => {\r\n  return (\r\n    <div className=\"tc\">\r\n      {tagList.length > 0 &&\r\n        tagList.map((item, idx) => <Tag key={idx} name={item} />)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagList;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Recipe = ({ id, image, title }) => {\r\n  return (\r\n    <Link\r\n      to={`/recipe/${id}`}\r\n      style={{ textDecoration: \"none\", color: \"black\" }}\r\n    >\r\n      <div className=\"w-90 center bg-white br3 pa3 pa4-ns mv3 ba b--black-10 grow\">\r\n        <div className=\"tc\">\r\n          <img\r\n            src={image}\r\n            className=\"h4 br-100 w4 dib ba b--white pa2\"\r\n            alt={id}\r\n          />\r\n          <h1 className=\"f3 mb2\">{title}</h1>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","import React from \"react\";\r\nimport Recipe from \"./Recipe\";\r\nimport ReactLoading from \"react-loading\";\r\nimport \"./RecipeBody.css\";\r\n\r\nconst RecipeBody = ({ isLoading, recipes }) => {\r\n  if (isLoading) return <ReactLoading className=\"center\" type={`spokes`} />;\r\n  if (recipes.length === 0) return <div className=\"tc white\">Recipe empty</div>;\r\n  return (\r\n    <div className=\"recipe-body justify-center\">\r\n      {recipes.map(({ id, image, title }) => (\r\n        <Recipe id={id} key={id} image={image} title={title} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeBody;\r\n","const getAPIKey = () => {\r\n  const key = `26991cf96cfd4a85a7dc2670ece3b80b`;\r\n  return key;\r\n};\r\n\r\nexport default getAPIKey;\r\n","import React, { Component } from \"react\";\r\nimport \"./Home.css\";\r\nimport RecipeSearch from \"../components/RecipeSearch\";\r\nimport TagList from \"../components/TagList\";\r\nimport RecipeBody from \"../components/RecipeBody\";\r\nimport getAPIKey from \"../APIKEY\";\r\n\r\nclass Home extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      searchField: \"\",\r\n      tagList: [],\r\n      isLoading: false,\r\n      recipes: [],\r\n    };\r\n  }\r\n\r\n  handleSearchField = (e) => {\r\n    this.setState({ searchField: e.target.value });\r\n  };\r\n\r\n  handleTagList = () => {\r\n    const { tagList, searchField } = this.state;\r\n    if (!tagList.includes(searchField)) {\r\n      this.setState(\r\n        {\r\n          tagList: [...tagList, searchField],\r\n        },\r\n        () => this.handleRecipe()\r\n      );\r\n    }\r\n  };\r\n\r\n  handleRecipe = () => {\r\n    const { tagList } = this.state;\r\n    const ingredients = tagList.join(\",+\");\r\n    const query = `https://api.spoonacular.com/recipes/findByIngredients?ingredients=${ingredients}&apiKey=${getAPIKey()}&number=20`;\r\n    this.setState({ isLoading: true });\r\n    fetch(query)\r\n      .then((res) => res.json())\r\n      .then((recipes) => this.setState({ recipes }))\r\n      .then(() => this.setState({ isLoading: false }));\r\n  };\r\n\r\n  render() {\r\n    const { tagList, isLoading, recipes } = this.state;\r\n    return (\r\n      <div className=\"Home\">\r\n        <section>\r\n          <div className=\"searching-bar\">\r\n            <RecipeSearch\r\n              changeSearchField={this.handleSearchField}\r\n              addTag={this.handleTagList}\r\n            />\r\n            <TagList tagList={tagList} />\r\n          </div>\r\n\r\n          <RecipeBody isLoading={isLoading} recipes={recipes} />\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst ingredient = ({ image, name }) => {\r\n  return (\r\n    <div className=\"center tc\">\r\n      <div className=\"ingredient-image grow\">\r\n        <img\r\n          className=\"pa2\"\r\n          src={`https://spoonacular.com/cdn/ingredients_100x100/${image}`}\r\n          alt={name}\r\n        />\r\n      </div>\r\n      <div className=\"ingredient-name tc\">{name}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ingredient;\r\n","import React, { Component } from \"react\";\r\nimport getAPIKey from \"../APIKEY\";\r\nimport ReactLoading from \"react-loading\";\r\nimport \"./Info.css\";\r\nimport Ingredient from \"../components/Ingredient\";\r\n\r\nclass Info extends Component {\r\n  constructor({ match }) {\r\n    super();\r\n    this.id = match.params.id;\r\n    this.state = {\r\n      title: \"\",\r\n      image: \"\",\r\n      ingredients: [],\r\n      isLoaded: false,\r\n      rating: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const query = `https://api.spoonacular.com/recipes/${\r\n      this.id\r\n    }/information?&apiKey=${getAPIKey()}`;\r\n    fetch(query)\r\n      .then((res) => res.json())\r\n      .then(({ title, image, extendedIngredients, summary }) =>\r\n        this.setState({\r\n          title,\r\n          image,\r\n          ingredients: extendedIngredients,\r\n          isLoaded: true,\r\n          summary,\r\n        })\r\n      );\r\n  }\r\n\r\n  render() {\r\n    const { title, image, ingredients, summary } = this.state;\r\n    if (!this.state.isLoaded)\r\n      return <ReactLoading className=\"center\" type={`spokes`} />;\r\n    return (\r\n      <div className=\"food-main mh7-l mh4-m mh2 mb3 ph5-l ph3 pb5 pt3\">\r\n        <div className=\"information tc title-font f2 ma3\">{title}</div>\r\n        <div className=\"flex\">\r\n          <img className=\"food-image ma3 center br3 grow\" src={image} />\r\n        </div>\r\n        <div className=\"tc ma3 f4 title-font\">Ingredients</div>\r\n        <div className=\"food-ingredient pa4 bg-white br4\">\r\n          {ingredients.map((item) => (\r\n            <Ingredient\r\n              id={item.id}\r\n              key={item.id}\r\n              image={item.image}\r\n              name={item.original}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div className=\"tc ma3 f4 title-font\">Recipe Summary</div>\r\n        <div\r\n          className=\"description pa4 bg-white br4\"\r\n          dangerouslySetInnerHTML={{ __html: summary }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Info;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\n\nimport Home from \"./Home\";\nimport Info from \"./Info\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <header className=\"Home-header\">\n          <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n            <h1 className=\"f3 f2-m f1-l white-90\">Recipe Finder</h1>\n          </Link>\n        </header>\n        <Switch>\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/recipe/:id\" component={Info} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"tachyons\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}